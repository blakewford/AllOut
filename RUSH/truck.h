#pragma once

//AUTOGENERATED FILE WARNING!!!!!

#ifdef __AVR__
#include <avr/pgmspace.h>
#endif

const uint8_t PROGMEM truck[] =
{
    1,    2,    3,
    4,    5,    3,
    4,    2,    3,
    4,    5,    3,
    1,    2,    3,
    1,    5,    3,
    1,    2,    3,
    1,    5,    6,
    1,    5,    3,
    1,    5,    3,
    7,    5,    6,
    4,    5,    3,
    4,    5,    6,
    4,    2,    3,
    4,    5,    3,
    7,    5,    6,
    1,    5,    3,
    1,    5,    6,
    4,    5,    3,
    8,    5,    6,
    4,    5,    6,
    8,    5,    6,
    4,    5,    3,
    7,    5,    6,
    4,    2,    9,
    1,    2,    3,
    4,    2,    3,
    7,    10,    6,
    1,    5,    6,
    1,    10,    6,
    1,    5,    6,
    7,    10,    6,
    7,    5,    6,
    4,    10,    6,
    8,    5,    6,
    8,    10,    6,
    8,    5,    6,
    4,    10,    6,
    4,    5,    6,
    4,    2,    3,
    4,    5,    6,
    4,    2,    9,
    1,    2,    9,
    1,    5,    6,
    1,    2,    3,
    7,    5,    11,
    8,    5,    6,
    7,    5,    6,
    7,    10,    6,
    7,    5,    11,
    7,    5,    6,
    8,    10,    11,
    4,    10,    6,
    8,    10,    6,
    1,    10,    11,
    7,    10,    6,
    1,    10,    6,
    8,    5,    6,
    8,    10,    11,
    8,    10,    6,
    1,    5,    6,
    1,    10,    11,
    1,    10,    6,
    4,    10,    6,
    4,    5,    11,
    4,    5,    6,
    1,    2,    3,
    4,    2,    9,
    1,    2,    9,
    1,    10,    11,
    1,    5,    6,
    1,    5,    11,
    7,    5,    11,
    7,    10,    6,
    7,    10,    11,
    8,    5,    6,
    7,    5,    11,
    8,    5,    11,
    7,    10,    6,
    1,    10,    11,
    7,    10,    11,
    4,    5,    11,
    4,    10,    6,
    4,    10,    11,
    4,    10,    6,
    8,    10,    11,
    4,    10,    11,
    8,    10,    11,
    8,    5,    6,
    8,    5,    11,
    4,    5,    11,
    4,    2,    9,
    4,    5,    6,
    1,    5,    6,
    1,    2,    9,
    1,    5,    11,
    7,    5,    11,
    1,    10,    11,
    1,    5,    11,
    8,    10,    11,
    4,    5,    11,
    4,    10,    11,
    4,    5,    11,
    8,    10,    11,
    8,    5,    11,
    1,    10,    11,
    7,    5,    11,
    7,    10,    11,
    1,    11,    9,
    4,    2,    9,
    4,    11,    9,
    4,    2,    9,
    1,    11,    9,
    1,    2,    9,
    4,    2,    9,
    4,    5,    11,
    4,    2,    5,
    1,    11,    5,
    1,    2,    9,
    1,    11,    9,
    4,    11,    9,
    4,    11,    5,
    1,    11,    9,
    4,    2,    9,
    4,    11,    5,
    4,    11,    9,
    1,    5,    12,
    7,    5,    11,
    1,    5,    11,
    7,    5,    11,
    7,    5,    12,
    8,    5,    11,
    8,    5,    11,
    4,    5,    12,
    4,    5,    11,
    1,    5,    11,
    1,    2,    9,
    1,    5,    12,
    1,    11,    9,
    4,    11,    5,
    1,    11,    5,
    4,    11,    5,
    4,    2,    9,
    4,    2,    5,
    1,    2,    9,
    1,    11,    5,
    1,    2,    4,
    4,    5,    12,
    4,    2,    5,
    4,    5,    11,
    8,    5,    11,
    8,    5,    12,
    4,    5,    12,
    8,    5,    12,
    8,    5,    11,
    7,    5,    12,
    7,    5,    12,
    7,    5,    11,
    1,    5,    12,
    1,    2,    4,
    1,    5,    12,
    1,    2,    9,
    4,    2,    5,
    4,    2,    4,
    4,    11,    5,
    4,    11,    5,
    1,    2,    4,
    1,    11,    5,
    1,    2,    4,
    4,    11,    5,
    4,    2,    4,
    4,    5,    12,
    4,    2,    4,
    4,    2,    5,
    1,    5,    12,
    7,    10,    12,
    7,    5,    12,
    7,    10,    12,
    1,    5,    12,
    1,    10,    12,
    8,    5,    12,
    4,    10,    12,
    4,    5,    12,
    4,    10,    12,
    8,    5,    12,
    8,    10,    12,
    4,    5,    13,
    4,    2,    4,
    4,    5,    12,
    1,    5,    12,
    1,    2,    4,
    1,    5,    13,
    1,    5,    12,
    1,    10,    13,
    1,    10,    12,
    4,    2,    14,
    1,    2,    4,
    4,    2,    4,
    4,    10,    12,
    4,    5,    13,
    4,    5,    12,
    7,    5,    13,
    8,    5,    12,
    7,    5,    12,
    8,    5,    12,
    8,    10,    13,
    8,    10,    12,
    8,    10,    13,
    4,    10,    12,
    8,    10,    12,
    1,    10,    13,
    7,    10,    12,
    1,    10,    12,
    7,    10,    12,
    7,    5,    13,
    7,    5,    12,
    7,    5,    13,
    7,    10,    12,
    7,    10,    13,
    4,    5,    13,
    4,    10,    12,
    4,    10,    13,
    4,    10,    12,
    8,    10,    13,
    4,    10,    13,
    8,    5,    12,
    7,    5,    13,
    8,    5,    13,
    7,    10,    12,
    1,    10,    13,
    7,    10,    13,
    1,    10,    13,
    1,    5,    12,
    1,    5,    13,
    8,    10,    13,
    8,    5,    12,
    8,    5,    13,
    1,    2,    14,
    1,    5,    13,
    1,    2,    4,
    4,    2,    4,
    4,    5,    13,
    4,    2,    14,
    1,    2,    4,
    4,    2,    14,
    1,    2,    14,
    7,    5,    13,
    1,    10,    13,
    1,    5,    13,
    8,    10,    13,
    4,    5,    13,
    4,    10,    13,
    4,    5,    13,
    8,    10,    13,
    8,    5,    13,
    1,    10,    13,
    7,    5,    13,
    7,    10,    13,
    8,    5,    13,
    4,    5,    14,
    4,    5,    13,
    1,    5,    14,
    7,    5,    13,
    1,    5,    13,
    7,    5,    13,
    1,    5,    14,
    8,    5,    13,
    4,    5,    14,
    8,    5,    13,
    1,    5,    14,
    1,    5,    13,
    1,    2,    14,
    1,    5,    14,
    4,    2,    14,
    4,    5,    13,
    4,    5,    14,
    4,    2,    14,
    1,    5,    14,
    1,    2,    14,
    1,    5,    14,
    4,    2,    14,
    4,    5,    14,
};

const float ndxToValueTruck[] =
{
    282.00, -7.00, -2.00, -16.00, 7.00, 4.00, -12.00, -3.00, 3.00, -5.00, 6.00, -6.00, 8.00, 14.00, 16.00, 
};

const uint8_t PROGMEM fillTruck[] =
{
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    20,
    196,
    20,
    196,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
};
