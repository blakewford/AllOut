#pragma once

//AUTOGENERATED FILE WARNING!!!!!

#ifdef __AVR__
#include <avr/pgmspace.h>
#endif

const uint8_t PROGMEM car[] =
{
    1,    2,    3,
    4,    5,    3,
    4,    2,    3,
    4,    5,    3,
    1,    2,    3,
    1,    5,    3,
    4,    6,    7,
    4,    2,    3,
    4,    5,    3,
    1,    2,    3,
    1,    6,    7,
    1,    5,    3,
    1,    6,    7,
    4,    5,    3,
    1,    5,    3,
    4,    5,    3,
    1,    6,    7,
    4,    6,    7,
    4,    8,    9,
    1,    2,    3,
    4,    2,    3,
    1,    2,    3,
    4,    8,    9,
    1,    8,    9,
    4,    8,    10,
    4,    2,    3,
    4,    6,    7,
    4,    2,    3,
    4,    8,    10,
    4,    8,    9,
    1,    8,    10,
    1,    2,    3,
    1,    8,    9,
    4,    8,    9,
    5,    8,    10,
    1,    8,    9,
    1,    6,    7,
    1,    2,    3,
    1,    6,    11,
    5,    8,    10,
    4,    8,    9,
    4,    8,    10,
    12,    8,    10,
    1,    8,    9,
    5,    8,    10,
    1,    8,    9,
    12,    8,    10,
    1,    8,    10,
    1,    6,    11,
    4,    6,    7,
    1,    6,    7,
    12,    8,    10,
    1,    13,    10,
    1,    8,    10,
    1,    13,    10,
    12,    8,    10,
    12,    13,    10,
    5,    13,    10,
    4,    8,    10,
    4,    13,    10,
    4,    8,    10,
    5,    13,    10,
    5,    8,    10,
    4,    8,    10,
    4,    6,    7,
    4,    6,    11,
    1,    8,    14,
    1,    2,    3,
    1,    8,    10,
    4,    6,    7,
    1,    6,    11,
    4,    6,    11,
    12,    8,    10,
    12,    13,    14,
    12,    13,    10,
    5,    8,    14,
    12,    8,    10,
    5,    8,    10,
    12,    13,    14,
    1,    13,    10,
    12,    13,    10,
    5,    13,    10,
    5,    8,    14,
    5,    8,    10,
    4,    13,    14,
    5,    13,    10,
    4,    13,    10,
    1,    13,    10,
    1,    8,    14,
    1,    8,    10,
    4,    8,    10,
    4,    13,    14,
    4,    13,    10,
    1,    6,    11,
    1,    2,    3,
    1,    6,    15,
    4,    8,    10,
    4,    6,    11,
    4,    8,    14,
    4,    13,    14,
    4,    8,    10,
    4,    8,    14,
    5,    13,    10,
    4,    13,    14,
    5,    13,    14,
    12,    8,    10,
    5,    8,    14,
    12,    8,    14,
    1,    8,    14,
    1,    13,    10,
    1,    13,    14,
    5,    8,    14,
    5,    13,    10,
    5,    13,    14,
    1,    13,    10,
    12,    13,    14,
    1,    13,    14,
    12,    13,    14,
    12,    8,    10,
    12,    8,    14,
    4,    6,    11,
    1,    6,    11,
    1,    14,    15,
    4,    8,    14,
    4,    6,    11,
    4,    6,    15,
    1,    8,    14,
    12,    13,    14,
    12,    8,    14,
    4,    6,    11,
    1,    14,    15,
    4,    14,    15,
    5,    8,    14,
    4,    13,    14,
    4,    8,    14,
    4,    13,    14,
    5,    8,    14,
    5,    13,    14,
    12,    13,    14,
    1,    8,    14,
    1,    13,    14,
    4,    14,    15,
    4,    6,    15,
    4,    6,    11,
    1,    6,    15,
    1,    14,    15,
    1,    6,    11,
    1,    6,    15,
    1,    2,    3,
    1,    6,    8,
    1,    6,    15,
    4,    14,    15,
    4,    6,    15,
    4,    6,    15,
    1,    14,    15,
    1,    6,    15,
    1,    14,    15,
    4,    6,    15,
    4,    14,    15,
    4,    14,    15,
    1,    6,    15,
    1,    14,    15,
    4,    14,    8,
    4,    6,    15,
    4,    14,    15,
    1,    8,    14,
    1,    2,    16,
    1,    2,    3,
    1,    14,    15,
    1,    14,    8,
    4,    14,    15,
    1,    6,    15,
    1,    14,    8,
    1,    14,    15,
    12,    8,    14,
    1,    8,    17,
    1,    8,    14,
    5,    8,    14,
    5,    8,    17,
    12,    8,    14,
    4,    8,    17,
    5,    8,    14,
    4,    8,    14,
    4,    8,    14,
    4,    6,    15,
    4,    8,    17,
    4,    14,    15,
    1,    14,    8,
    4,    14,    8,
    1,    14,    8,
    1,    6,    15,
    1,    6,    8,
    1,    2,    16,
    1,    6,    8,
    1,    2,    3,
    4,    6,    15,
    4,    14,    8,
    4,    6,    1,
    12,    8,    14,
    12,    8,    17,
    1,    8,    17,
    5,    8,    17,
    5,    8,    14,
    4,    8,    17,
    12,    8,    17,
    12,    8,    14,
    5,    8,    17,
    4,    6,    1,
    4,    8,    17,
    4,    6,    15,
    1,    6,    8,
    1,    6,    1,
    1,    14,    8,
    1,    14,    8,
    4,    6,    1,
    4,    14,    8,
    1,    2,    16,
    1,    8,    14,
    1,    8,    17,
    4,    6,    1,
    1,    14,    8,
    1,    6,    1,
    5,    13,    17,
    4,    8,    17,
    4,    13,    17,
    4,    8,    17,
    5,    13,    17,
    5,    8,    17,
    1,    13,    17,
    12,    8,    17,
    12,    13,    17,
    12,    8,    17,
    1,    13,    17,
    1,    8,    17,
    1,    2,    16,
    1,    6,    1,
    1,    6,    8,
    1,    6,    18,
    4,    6,    1,
    1,    6,    1,
    4,    8,    17,
    4,    6,    1,
    4,    2,    18,
    5,    8,    18,
    12,    8,    17,
    5,    8,    17,
    12,    8,    17,
    12,    13,    18,
    12,    13,    17,
    1,    13,    18,
    1,    8,    17,
    1,    13,    17,
    4,    8,    17,
    4,    13,    18,
    4,    13,    17,
    12,    13,    18,
    1,    13,    17,
    12,    13,    17,
    5,    13,    17,
    5,    8,    18,
    5,    8,    17,
    4,    13,    18,
    5,    13,    17,
    4,    13,    17,
    4,    6,    18,
    4,    2,    18,
    4,    6,    1,
    4,    6,    1,
    1,    6,    18,
    4,    6,    18,
    5,    13,    17,
    4,    13,    18,
    5,    13,    18,
    4,    8,    17,
    4,    2,    18,
    4,    13,    18,
    1,    8,    18,
    1,    8,    17,
    1,    13,    18,
    12,    13,    18,
    12,    8,    17,
    12,    8,    18,
    1,    13,    17,
    12,    13,    18,
    1,    13,    18,
    5,    8,    18,
    5,    13,    17,
    5,    13,    18,
    12,    8,    17,
    5,    8,    18,
    12,    8,    18,
    1,    2,    16,
    1,    6,    18,
    1,    6,    1,
    1,    2,    16,
    1,    8,    17,
    1,    8,    18,
    12,    8,    18,
    1,    8,    18,
    12,    13,    18,
    12,    13,    18,
    1,    8,    18,
    1,    13,    18,
    4,    8,    18,
    4,    13,    18,
    4,    2,    18,
    4,    13,    18,
    4,    8,    18,
    5,    13,    18,
    4,    8,    18,
    5,    8,    18,
    5,    13,    18,
    4,    2,    16,
    4,    8,    18,
    4,    2,    18,
    19,    2,    16,
    5,    8,    18,
    4,    8,    18,
    12,    8,    18,
    19,    2,    16,
    1,    8,    18,
    5,    8,    18,
    19,    2,    16,
    12,    8,    18,
    4,    20,    16,
    4,    2,    18,
    4,    6,    18,
    1,    21,    16,
    4,    6,    18,
    1,    6,    18,
    4,    2,    16,
    19,    2,    16,
    4,    8,    18,
    4,    6,    18,
    1,    21,    16,
    4,    20,    16,
    4,    2,    18,
    4,    20,    16,
    4,    2,    16,
    1,    8,    18,
    19,    2,    16,
    1,    2,    16,
    1,    2,    16,
    1,    21,    16,
    1,    6,    18,
    1,    21,    16,
    4,    2,    16,
    4,    20,    16,
    1,    2,    16,
    19,    2,    16,
    4,    2,    16,
    4,    2,    16,
    1,    21,    16,
    1,    2,    16,
};

const float ndxToValueCar[] =
{
    354.00, 7.00, 2.00, -16.00, -7.00, -3.00, -2.00, -15.00, 4.00, -14.00, -12.00, -8.00, 3.00, 6.00, -6.00, -5.00, 16.00, 8.00, 14.00, 7.00, 0.00, -0.00, 
};

const uint8_t PROGMEM fillCar[] =
{
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    47,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    20,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
    196,
};
