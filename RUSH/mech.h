#pragma once

//AUTOGENERATED FILE WARNING!!!!!

#ifdef __AVR__
#include <avr/pgmspace.h>
#endif

const uint8_t PROGMEM mech[] =
{
    1,    2,    3,
    4,    5,    3,
    4,    2,    3,
    4,    5,    3,
    1,    2,    3,
    1,    6,    3,
    1,    7,    8,
    4,    5,    3,
    1,    6,    3,
    1,    2,    3,
    1,    9,    8,
    1,    6,    3,
    4,    9,    8,
    4,    2,    3,
    4,    5,    3,
    4,    2,    10,
    1,    2,    3,
    4,    2,    3,
    1,    6,    3,
    1,    9,    8,
    1,    7,    8,
    4,    5,    3,
    1,    7,    8,
    4,    11,    8,
    4,    9,    8,
    4,    5,    3,
    4,    11,    8,
    2,    12,    9,
    1,    13,    9,
    1,    12,    9,
    1,    13,    9,
    2,    12,    9,
    2,    13,    9,
    4,    12,    9,
    13,    13,    9,
    13,    12,    9,
    13,    13,    9,
    4,    12,    9,
    4,    13,    9,
    13,    13,    9,
    13,    12,    8,
    13,    12,    9,
    1,    13,    9,
    1,    12,    8,
    1,    12,    9,
    1,    12,    8,
    2,    12,    9,
    1,    12,    9,
    4,    12,    8,
    4,    13,    9,
    4,    12,    9,
    2,    12,    8,
    2,    13,    9,
    2,    12,    9,
    13,    12,    8,
    4,    12,    9,
    13,    12,    9,
    4,    12,    9,
    13,    12,    8,
    4,    12,    8,
    2,    12,    9,
    1,    12,    8,
    2,    12,    8,
    13,    12,    8,
    4,    11,    8,
    4,    12,    8,
    2,    9,    8,
    1,    7,    8,
    1,    9,    8,
    2,    12,    8,
    1,    7,    8,
    2,    9,    8,
    4,    2,    3,
    4,    9,    8,
    4,    2,    10,
    13,    9,    8,
    4,    11,    8,
    13,    12,    8,
    1,    7,    8,
    2,    12,    8,
    1,    12,    8,
    4,    11,    8,
    13,    9,    8,
    4,    9,    8,
    1,    2,    10,
    1,    9,    8,
    1,    2,    3,
    1,    12,    8,
    1,    13,    9,
    1,    12,    14,
    13,    12,    8,
    13,    13,    9,
    13,    12,    14,
    2,    13,    15,
    1,    13,    9,
    2,    13,    9,
    4,    13,    15,
    13,    13,    9,
    4,    13,    9,
    2,    9,    8,
    2,    12,    14,
    2,    12,    8,
    2,    13,    9,
    2,    12,    8,
    2,    13,    15,
    1,    12,    8,
    1,    16,    14,
    1,    7,    8,
    1,    9,    14,
    2,    9,    8,
    1,    9,    8,
    4,    11,    8,
    1,    7,    8,
    1,    16,    14,
    13,    12,    8,
    13,    9,    14,
    13,    9,    8,
    13,    9,    14,
    4,    9,    8,
    13,    9,    8,
    4,    17,    14,
    4,    12,    8,
    4,    11,    8,
    4,    13,    9,
    4,    12,    8,
    4,    13,    15,
    13,    9,    14,
    13,    12,    8,
    13,    12,    14,
    4,    11,    8,
    1,    16,    14,
    4,    17,    14,
    13,    13,    15,
    13,    12,    14,
    13,    13,    9,
    2,    9,    8,
    1,    9,    14,
    2,    9,    14,
    4,    12,    8,
    4,    17,    14,
    4,    12,    14,
    2,    12,    14,
    2,    9,    8,
    2,    9,    14,
    1,    16,    14,
    1,    12,    8,
    1,    12,    14,
    4,    9,    8,
    13,    9,    14,
    4,    9,    14,
    1,    13,    15,
    1,    12,    14,
    1,    13,    9,
    1,    2,    3,
    4,    2,    10,
    1,    2,    10,
    4,    12,    14,
    4,    13,    15,
    4,    12,    8,
    1,    13,    9,
    2,    13,    15,
    1,    13,    15,
    13,    13,    9,
    4,    13,    15,
    13,    13,    15,
    2,    12,    14,
    2,    13,    15,
    2,    12,    8,
    1,    16,    14,
    2,    9,    14,
    1,    9,    14,
    2,    9,    14,
    1,    16,    14,
    2,    12,    14,
    2,    12,    14,
    1,    16,    14,
    1,    12,    14,
    13,    12,    14,
    4,    17,    14,
    13,    9,    14,
    4,    17,    14,
    13,    12,    14,
    4,    12,    14,
    13,    9,    14,
    4,    17,    14,
    4,    9,    14,
    4,    9,    14,
    4,    2,    10,
    4,    9,    8,
    1,    9,    8,
    1,    2,    10,
    1,    9,    14,
    1,    12,    18,
    2,    12,    14,
    1,    12,    14,
    13,    12,    18,
    4,    12,    14,
    13,    12,    14,
    13,    12,    14,
    13,    13,    15,
    13,    12,    18,
    1,    12,    14,
    1,    13,    15,
    1,    12,    18,
    2,    13,    15,
    2,    12,    14,
    2,    12,    18,
    4,    13,    15,
    4,    12,    14,
    4,    12,    18,
    2,    12,    14,
    1,    12,    18,
    2,    12,    18,
    4,    12,    14,
    13,    12,    18,
    4,    12,    18,
    4,    17,    14,
    1,    16,    14,
    1,    19,    10,
    4,    20,    10,
    4,    9,    14,
    4,    17,    14,
    1,    9,    14,
    1,    19,    10,
    1,    16,    14,
    4,    13,    15,
    13,    12,    18,
    13,    13,    15,
    2,    13,    15,
    1,    12,    18,
    1,    13,    15,
    1,    12,    18,
    2,    13,    15,
    2,    12,    18,
    13,    12,    18,
    4,    13,    15,
    4,    12,    18,
    4,    2,    10,
    4,    9,    14,
    4,    20,    10,
    4,    17,    14,
    1,    19,    10,
    4,    20,    10,
    1,    9,    14,
    1,    2,    10,
    1,    19,    10,
    4,    2,    10,
    1,    19,    10,
    1,    2,    10,
    1,    19,    10,
    4,    2,    10,
    4,    20,    10,
};

const float ndxToValueMech[] =
{
    252.00, -10.00, -16.00, -22.00, 10.00, -0.00, -0.00, 0.00, -9.00, -12.00, 4.00, -0.00, 12.00, 16.00, -3.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 
};

const uint8_t PROGMEM fillMech[] =
{
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
    255,
};

const uint8_t PROGMEM orderMech[] =
{
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
};
